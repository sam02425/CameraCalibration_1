import cv2
import numpy as np
import glob
import pickle
import os
from self_supervised_calibration import estimate_calibration_params_self_supervised
from unsupervised_calibration import unsupervised_calibration
from transfer_learning_calibration import fine_tune_calibration_model

# Load intrinsic parameters
with open('left_calibration.pkl', 'rb') as file:
    left_camera_matrix, left_dist_coeffs = pickle.load(file)
with open('right_calibration.pkl', 'rb') as file:
    right_camera_matrix, right_dist_coeffs = pickle.load(file)

# Perform self-supervised calibration parameter estimation
image_pairs = load_image_pairs()  # Load pairs of calibration images
calibration_params = estimate_calibration_params_self_supervised(image_pairs)

# Perform unsupervised calibration using scene geometry and object motions
images = load_calibration_images()  # Load calibration images
unsupervised_calibration_params = unsupervised_calibration(images)

# Perform transfer learning to adapt pre-trained models to new scenes
new_scene_dataset = load_new_scene_dataset()  # Load dataset for the new scene
fine_tuned_model = fine_tune_calibration_model(new_scene_dataset)

# Save the estimated calibration parameters and fine-tuned model
np.save('calibration_params.npy', calibration_params)
np.save('unsupervised_calibration_params.npy', unsupervised_calibration_params)
fine_tuned_model.save('fine_tuned_calibration_model.h5')

print("Extrinsic calibration completed successfully.")